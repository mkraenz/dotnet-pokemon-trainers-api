version: "3.1"

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: root
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8084:8080

  cache:
    image: bitnami/redis:latest
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379

  # running on http://localhost:4344/ on host machine
  # see https://www.keycloak.org/docs/latest/securing_apps/#_javascript_adapter
  # create new client with RootURL http://localhost:7132, Valid redirect URIs http://localhost:7132/*, Valid post logout redirect URIs http://localhost:7132/*, and Web origins (aka CORS) http://localhost:7132. Then in the Clients -> <yourClient> -> Action (at top right) -> Download adapter config. Copy the json file next to the html file that logs the user in.

  # to setup self-registration (i.e. sign up): Realm Settings -> Login -> User Registration (checked). Ideally also Verify Email (checked), and Forgot password (checked)
  # also setup an email: Realm Settings -> Email -> fill in info (for test use check mailhog below. Use credentials Host 172.17.0.1 (=ip of host machine for any docker container), Port 1025, No encryption, No Authentication)

  # how to add roles to access and id tokens https://medium.com/@xavier.hahn/adding-authorization-to-asp-net-core-app-using-keycloak-c6c96ee0e655
  # 'Adding the role to the access and id tokens' section has changed to Client Scopes -> create new. then select the created client scope -> mappers -> add mapper. Then go back to Clients -> yourClient -> Client scopes -> add client scopes -> select the new client-scope and set type Default

  # realm-specific JWKS is at http://localhost:4344/realms/master/protocol/openid-connect/certs (and not at .well-known/jwks.json *roll-eyes*)
  keycloak:
    image: quay.io/keycloak/keycloak:19.0.1
    ports:
      - 4344:8080
    links:
      - db:database
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      # from https://www.keycloak.org/server/containers#_relevant_options
      KC_DB: postgres
      KC_DB_PASSWORD: example
      KC_DB_USERNAME: root
      KC_DB_URL_HOST: database # using the Docker link defined above
      KC_DB_URL_PORT: 5432
      # # TODO: automatically create db on postgres. Currently, just manually run `CREATE DATABASE "keycloak";` via Adminer -> SQL command
      KC_DB_URL_DATABASE: keycloak # name of the database
      KC_HEALTH_ENABLED: "true" # enables endpoints http://localhost:4344/health and /health/ready and /health/live
    depends_on:
      - db
    command: start-dev

  email:
    image: mailhog/mailhog
    logging:
      driver: none # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
