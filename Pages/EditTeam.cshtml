@page "{id:Guid}"
@model EditTeamModel

@{
    ViewData["Title"] = "Edit Team";
    var firstPokemon = Model.Pokemons.FirstOrDefault(p => p.Id == Model.Team.FirstPokemonId);
    var secondPokemon = Model.Pokemons.FirstOrDefault(p => p.Id == Model.Team.SecondPokemonId);
    var thirdPokemon = Model.Pokemons.FirstOrDefault(p => p.Id == Model.Team.ThirdPokemonId);
    var fourthPokemon = Model.Pokemons.FirstOrDefault(p => p.Id == Model.Team.FourthPokemonId);
    var fifthPokemon = Model.Pokemons.FirstOrDefault(p => p.Id == Model.Team.FifthPokemonId);
    var sixthPokemon = Model.Pokemons.FirstOrDefault(p => p.Id == Model.Team.SixthPokemonId);
    Func<dynamic, Task<string>> pokemonSelectOptionsTemplate = async (pokemon) =>
    {
        @if (firstPokemon is not null)
        {
            <option value="@(firstPokemon.Id)" class="text-capitalize" selected="selected">
                @firstPokemon.Species.Name</option>
        }
        else
        {
            <option disabled value="" selected="selected">Select a Pokemon</option>
        }

        @foreach (var pkmn in Model.Pokemons)
        {
            <option value="@(pkmn.Id)" class="text-capitalize">
                @(pkmn.Species.Name) (Lv @(pkmn.Level))
            </option>
        }
        return "";
    };
}

<h1>Edit Team</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>
            <div class="form-group mb-4">
                <label asp-for="@(Model.Team.Name)" class="control-label"></label>
                <input asp-for="@(Model.Team.Name)" class="form-control" />
                <span asp-validation-for="@(Model.Team.Name)" class="text-danger"></span>
            </div>

            @* see
                https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-6.0#templated-razor-delegates
                for how to use templates *@
            <div class="form group mb-4">
                @* dynamically setting asp-for did not work. it just statically became `key` (from the name of the
                    template function parameter I used) *@
                <label asp-for="@(Model.Team.FirstPokemonId)" class="control-label">Position 1</label>
                <select asp-for="@(Model.Team.FirstPokemonId)" class="form-select text-capitalize">
                    @(pokemonSelectOptionsTemplate(firstPokemon))
                </select>
            </div>

            <div class="form group mb-4">
                <label asp-for="@(Model.Team.SecondPokemonId)" class="control-label">Position 2</label>
                <select asp-for="@(Model.Team.SecondPokemonId)" class="form-select text-capitalize">
                    @(pokemonSelectOptionsTemplate(secondPokemon))
                </select>
            </div>

            <div class="form group mb-4">
                <label asp-for="@(Model.Team.ThirdPokemonId)" class="control-label">Position 3</label>
                <select asp-for="@(Model.Team.ThirdPokemonId)" class="form-select text-capitalize">
                    @(pokemonSelectOptionsTemplate(thirdPokemon))
                </select>
            </div>

            <div class="form group mb-4">
                <label asp-for="@(Model.Team.FourthPokemonId)" class="control-label">Position 4</label>
                <select asp-for="@(Model.Team.FourthPokemonId)" class="form-select text-capitalize">
                    @(pokemonSelectOptionsTemplate(fourthPokemon))
                </select>
            </div>

            <div class="form group mb-4">
                <label asp-for="@(Model.Team.FifthPokemonId)" class="control-label">Position 5</label>
                <select asp-for="@(Model.Team.FifthPokemonId)" class="form-select text-capitalize">
                    @(pokemonSelectOptionsTemplate(fifthPokemon))
                </select>
            </div>

            <div class="form group mb-4">
                <label asp-for="@(Model.Team.SixthPokemonId)" class="control-label">Position 6</label>
                <select asp-for="@(Model.Team.SixthPokemonId)" class="form-select text-capitalize">
                    @(pokemonSelectOptionsTemplate(sixthPokemon))
                </select>
            </div>

            <div class="form-group mb-4">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-page="/Trainer" asp-route-trainerId="@(Model.TrainerId)">
                    <button class="btn btn-outline-secondary">Cancel</button>
                </a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}