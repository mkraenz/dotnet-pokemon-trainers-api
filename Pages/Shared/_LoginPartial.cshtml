@using dotnettest.Extensions;

<ul class="navbar-nav">
    @if (User.Identity.IsAuthenticated)
    {
        <li class="nav-item">
            <a class="nav-link text-dark" title="Manage">Hello
                @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" href="/signout">Sign Out</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark"
            @* Would be great to have the OIDC middleware handle registration too, but it doesnt.  *@
            @* Using redirect to static RegistrationSuccess page with login button to work around not having 'state' query parameter. *@
            href="http://localhost:4344/realms/teatime/protocol/openid-connect/registrations?client_id=aspnet&response_type=code&scope=openid%20profile%20email%20aspnet_roles%20roles&redirect_uri=https://localhost:7132/RegistrationSuccess">Register</a>
        </li>
        @foreach (var scheme in await Context.GetExternalProvidersAsync())
        {
            <partial name="_ExternalAuthProviderPartial" model="@scheme" />
            
        }
    }
</ul>
